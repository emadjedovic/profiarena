<div id="addInterviewModal" class="modal fade" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="addInterviewForm">
        <div class="modal-header">
          <h5 class="modal-title">Add Interview</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="application_id" class="form-label">Application ID</label>
            <input type="number" id="application_id" name="application_id" class="form-control" required>
          </div>
          <div class="mb-3">
            <label for="proposed_time" class="form-label">Proposed Time</label>
            <input type="datetime-local" id="proposed_time" name="proposed_time" class="form-control" required>
          </div>
          <div class="form-check mb-3">
            <input class="form-check-input" type="checkbox" id="is_online" name="is_online">
            <label class="form-check-label" for="is_online">Online Interview</label>
          </div>
          <div class="mb-3">
            <label for="city" class="form-label">City</label>
            <input type="text" id="city" name="city" class="form-control">
          </div>
          <div class="mb-3">
            <label for="street_address" class="form-label">Street Address</label>
            <input type="text" id="street_address" name="street_address" class="form-control">
          </div>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Save</button>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document
    .getElementById("addInterviewForm")
    .addEventListener("submit", function(e) {
      e.preventDefault();

      const formData = new FormData(this);
      const data = Object.fromEntries(formData);

      // explicitly sets data.is_online to true if the checkbox is checked and false otherwise
      data.is_online = document.getElementById("is_online").checked;

      fetch("/hr/interviews", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(data),
        })
        .then((response) => {
          if (!response.ok) {
            throw new Error("Failed to add interview. Please try again.");
          }
          return response.json();
        })
        .then((newInterview) => {
          calendar.addEvent({
            id: newInterview.id,
            title: `${newInterview.talent_first_name} ${newInterview.talent_last_name} - ${newInterview.status_desc}`,
            start: new Date(newInterview.proposed_time).toISOString(),
            allDay: false,
            extendedProps: {
              interview_status_id: newInterview.interview_status_id,
              review: newInterview.review || '',
            },
          });

          $("#addInterviewModal").modal("hide");
        })
        .catch((error) => {
          console.error("Error adding interview:", error);
          alert(error.message);
        });
    });
</script>